import java.util.*;

//奇偶剪枝
//若t-[abs(ex-sx)+abs(ey-sy)]结果为非偶数（奇数），则无法在t步恰好到达；

public class Main {

	static Scanner sc = new Scanner(System.in);
	static int n, m, t, xe, ye;
	static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};
	static char[][] a;
	static int[][] vis;
	static boolean flag = false;
	
	public static void main(String[] args) {
		
		while(true) {
			n = sc.nextInt(); m = sc.nextInt(); t = sc.nextInt();
			if(n==0 && m==0 && t==0) break;
			a = new char[n+10][m+10];
			vis = new int[n+10][m+10];
			
			int x = 0, y = 0, num = 0;  flag = false;
			
			for(int i=1; i<=n; i++) {
				String s = sc.next();
				for(int j=1; j<=m; j++) {
					a[i][j] = s.charAt(j-1);
					if(a[i][j] == 'S') {
						x = i; y = j;
					}
					if(a[i][j] == 'D') {
						xe = i; ye = j;
					}
					if(a[i][j] == 'X')
						num++;
				}
			}
			
			if((n*m-1-num) >= t) {
				vis[x][y] = 1; f(x,y,0);
			}
			
			if(flag) System.out.println("YES");
			else System.out.println("NO");
				
		}
		
	}
	
	static void f(int x, int y, int k) {
		if(x<1 || x>n || y<1 || y>m || k > t || flag) return ;
		if(k == t && a[x][y] == 'D') {
			flag = true; return ;
		}
		
		//奇偶剪枝
		int tmp = (t - k) - ( Math.abs(xe-x) + Math.abs(ye-y) );
	    if((tmp&1) == 1) return ;
		
		for(int i=0; i<4; i++) {
			int xx = x + dir[i][0];
			int yy = y + dir[i][1];
			if(a[xx][yy] == 'X' || vis[xx][yy]==1) 
				continue ;
			vis[xx][yy] = 1;
			f(xx,yy,k+1);
			vis[xx][yy] = 0;
		}
	}
	
}
